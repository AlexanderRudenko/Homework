<?php
/*
1. Дана строка 'Привет, мир!'. Сделайте из нее строку 'ПРИВЕТ МИР!'.
*/

echo '<br><br> ----- 1. Дана строка \'Привет, мир!\'. Сделайте из нее строку \'ПРИВЕТ МИР!\'. <br>';
$str = 'Привет, мир!';
$str = str_replace(",", "", $str);
$str = mb_strtoupper($str);
echo $str;

/*
2. Дана строка 'PHP'. Сделайте из нее строку 'php'.
*/
echo '<br><br> ----- 2. Дана строка \'PHP\'. Сделайте из нее строку \'php\'. <br>';

$str = 'PHP';
$str = strtolower($str);
echo $str;

/*
3. Дана строка 'москва'. Сделайте из нее строку 'Москва'.
*/
echo '<br><br> ----- 3. Дана строка \'москва\'. Сделайте из нее строку \'Москва\'. <br>';
$st = 'moscow';
$str = 'москва';
$str = ucfirst($str);
echo $str;
echo '<br>';


$start = microtime(true);
for ($i = 1; $i < 1000; $i++) {
    $st = ucfirst($st);
}
$time = microtime(true) - $start;
printf(' 1Скрипт  выполнялся %.10F сек.', $time);


echo '<br>';
echo $st;
echo '<br>';

$start = microtime(true);
for ($i = 1; $i < 1000; $i++) {
    $str = mb_convert_case($str, MB_CASE_TITLE, "UTF-8");
}
$time = microtime(true) - $start;
printf(' 2 Скрипт выполнялся %.10F сек.', $time);
echo '<br>';
echo $str;


/*
4. Дана строка 'МОСКВА'. Сделайте из нее строку 'Москва'.
*/
echo '<br><br> ----- 4. Дана строка \'МОСКВА\'. Сделайте из нее строку \'Москва\'. <br>';
$str = 'МОСКВА';

$start = microtime(true);
for ($i = 1; $i < 1000; $i++) {
    $str = mb_convert_case($str, MB_CASE_LOWER, "UTF-8");  /// у функции нездоровый аппетит на ресурс
    $str = mb_convert_case($str, 2, "UTF-8");
}
$time = microtime(true) - $start;
printf(' 2 Скрипт выполнялся %.10F сек.', $time);
echo '<br>';
echo $str;
/*
5. Дана строка 'иванов иван иванович'. Сделайте из нее строку 'Иванов Иван Иванович'.
*/
echo '<br><br> ----- 5. Дана строка \'иванов иван иванович\'. Сделайте из нее строку \'Иванов Иван Иванович\'. <br>';
$arr = array();
$str = 'иванов иван иванович';
$arr = explode(' ', $str);
print_r($arr);
$str_n = '';
foreach ($arr as $value) {
    $str_n .= mb_convert_case($value, 2, "UTF-8") . ' ';

}
echo $str_n;

///////////////Работа с strlen, substr
/*
6. Дана строка 'я учу PHP!'. Найдите количество символов в этой строке.
*/
echo '<br><br> ----- 6. Дана строка \'я учу PHP!\'. Найдите количество символов в этой строке. <br>';
$str = 'я учу PHP!';
echo mb_strlen($str);


/*
7. Дана строка 'я учу PHP!'. Вырежьте из нее слово 'учу' и слово 'PHP'.
*/
echo '<br><br> ----- 7. Дана строка \'я учу PHP!\'. Вырежьте из нее слово \'учу\' и слово \'PHP\'. <br>';

echo mb_substr($str, 2, 3);
echo '<br>';
echo mb_substr($str, -4, 3);

/*
8. Дана переменная $str, в которой хранится какой-либо текст.
Реализуйте обрезание длинного текста по следующему принципу:
если количество символов этого текста больше заданного в переменной $n,
то в переменную $result запишем первые $n символов строки $str и добавим в конец многоточие '...'.
В противном случае в переменную $result запишем содержимое переменной $str.
*/
echo '<br><br> ----- 8. Дана переменная str, в которой хранится какой-либо текст.
Реализуйте обрезание длинного текста по следующему принципу:
если количество символов этого текста больше заданного в переменной n,
то в переменную result запишем первые n символов строки str и добавим в конец многоточие \'...\'.
В противном случае в переменную result запишем содержимое переменной str. <br>';

$str = 'Обрезание текста';

function crop_text($str, $n)
{
    if (empty($str) || empty($n)) {
        return 0;
    }
    if (mb_strlen($str) <= $n) {
        $result = $str;
    } else {
        $result = mb_substr($str, 0, $n) . '...';
    }
    return $result;
}

echo crop_text($str, 5);

/*
9. Напишите функцию, которая генерирует пароль. Функция должна принимать параметр. Параметр должен задавать количество символов в пароле.
*/
echo '<br><br> ----- 9. Напишите функцию, которая генерирует пароль. 
Функция должна принимать параметр. Параметр должен задавать количество символов в пароле. <br>';

function gen_psw($pas_len)
{
    if (empty($pas_len)) {
        return 0;
    }
    $psw = '';
    $i = 1;
    $range_l = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'z', 'x', 'c', 'v', 'b', 'n', 'm'];
    $range_b = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'Z', 'X', 'C', 'V', 'B', 'N', 'M'];
    while ($i <= $pas_len) {
        $rand = rand(1, 3);
        unset($range);
        if ($rand == 1) {
            $psw .= $range_l{rand(0, 25)};
        }
        if ($rand == 2) {
            $psw .= $range_b{rand(0, 25)};
        }
        if ($rand == 3) {
            $psw .= rand(1, 9);
        }
        $i++;
    }
    return $psw;
}

echo gen_psw(15);

/*
10. Создайте переменную $password.
Присвойте переменной $password результат функции из предыдущего примера.
Если количество символов пароля больше 5-ти и меньше 10-ти,
то выведите пользователю сообщение о том, что пароль подходит,
иначе сообщение о том, что нужно придумать другой пароль.
*/
echo '<br><br> ----- 10. Проверка пароля <br>';

$password = gen_psw(10);
$pasw_len = strlen($password);
if ($pasw_len > 5 and $pasw_len < 10) {
    echo 'Пароль:', $password, '   подходит <br>';
} else {
    echo 'Необходимо придумать пароль > 5 и < 10 символов.';
}

/*
11. Нарисуйте пирамиду, как показано на рисунке,
только у вашей пирамиды должно столько рядов, чтобы последний элемент пирамидки состоял из одного символа.
Первый ряд пирамиды должен хранится в переменной $str (может иметь различное количество символов).
 Подсказка: воспользуйтесь функциями strlen и substr.

xxxxxxxxxx
xxxxxxxxx
xxxxxxxx
xxxxxxx
xxxxxx
*/
echo '<br><br> ----- 11. Нарисуйте пирамиду <br>';

function pyr_dec($str)
{
    if (empty($str)) {
        return 0;
    }
    $str_len = strlen($str) - 1;
    while ($str_len >= 0) {
        echo $str, '<br>';
        $str = substr($str, 0, -1);
        $str_len--;
    }
}

$str = 'xxxxx';
pyr_dec($str);

///////////////////Работа с str_replace
/*
12. Дана строка 'Я-учу-PHP!'. Замените все дефисы на тег '<br>'.
*/
echo '<br><br> ----- 12. Дана строка \'Я-учу-PHP!\'. Замените все дефисы на тег . <br>';

$str = 'Я-учу-PHP!';

echo str_replace('-', '<br>', $str);


/*
13. Дана строка '31.12.2013'. Замените все точки на дефисы.
*/
echo '<br><br> ----- 13. Дана строка \'31.12.2013\'. Замените все точки на дефисы. <br>';
$str = '31.12.2013';

echo str_replace('.', '-', $str);

/*
14. Дана строка $str. Замените смайлики ':)', ':(', '^-^', которые встречаются в этой строке на соответсвующие картинки (<img src=''>).
*/
echo '<br><br> ----- 14.  Замените смайлики <br>';
$str = ':) :( ^-^';

//echo '<img src="smile.jpg">';
$str = str_replace(':)', '<img src="smile.jpg">', $str);
$str = str_replace(':(', '<img src="sorrow.jpg">', $str); /// и так отстаю не стал маленький искать
$str = str_replace('^-^', '<img src="smile2.jpg">', $str);
$str = str_replace(',', '<br>', $str);

echo $str;


/*
15. Дана переменная $str, в которой хранится строка русского текста.
Напишите скрипт, который запишет транслит этого текста в переменную $translit.
Напишите также скрипт, который выполнит обратную операцию.
*/
echo '<br><br> ----- 15.  транслит <br>';

$str = 'русский текст';
echo translit($str),'<br>';
$str_en = 'russkij tekst';
echo translit($str_en),'<br>';
echo translit(translit($str)); /// для теста
function translit($str)
{
    if (empty($str)) {
        return 0;
    }
    $len = mb_strlen($str) - 1;
    $str = mb_strtolower($str);
    $translit = '';
    $arr_rus = [' ', 'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я'];
    $arr_en = [' ', 'a', 'b', 'v', 'g', 'd', 'e', 'yo', 'zh', 'z', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'f', 'h', 'c', 'ch', 'sh', 'w', '#', 'y', "'", 'je', 'ju', 'ja'];

    if (mb_detect_encoding($str) == 'UTF-8') { // if russian
        for ($i = 0; $i <= $len; $i++) {
            $str_mb= mb_substr($str,$i,1);
            foreach ($arr_rus as $key => $val) {
                if ($str_mb == $val) {
                    $translit .= $arr_en[$key];
                    break;
                }
            }
        }
    } else {   /// if english
        $translit = str_replace($arr_en,$arr_rus,$str);

    }
    return $translit;
}



//////////////////////Работа с explode, implode
/*
16. Дана строка 'я учу PHP!'. С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива.
 */
echo '<br><br> ----- 16.  Разбить строку пословам <br>';
$str = 'I learn PHP!';
$arr_str = explode(' ',$str);
echo $str,'<br>';
print_r($arr_str);

/*
17. Дан массив с элементами 'html', 'css', 'php', 'js'. С помощью функции implode создайте строку из этих элементов, разделенных запятыми.
*/
echo '<br><br> ----- 17. Дан массив с элементами \'html\', \'css\', \'php\', \'js\'. С помощью функции implode создайте строку из этих элементов <br>';

$arr=['html', 'css', 'php', 'js'];
$str = implode(', ',$arr);
echo $str;

/*
18. В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в формат '31.12.2013'.
*/
echo '<br><br> ----- 18. В переменной $date лежит дата в формате \'2013-12-31\'. Преобразуйте эту дату в формат \'31.12.2013\' <br>';
$str_date = '2013-12-31';
$str_date_new = date('d.m.Y',strtotime($str_date));
echo $str_date_new;


/*
19. В переменной $date лежит дата в формате '31.12.2013'. Преобразуйте эту дату в формат '2013-12-31'.
*/
echo '<br><br> ----- 19. В переменной $date лежит дата в формате \'31.12.2013\'. Преобразуйте эту дату в формат \'2013-12-31\' <br>';
$str_date = '';
$str_date = date('Y-m-d',strtotime($str_date_new));
echo $str_date;


//////////////////Работа с trim, ltrim, rtrim
/*
20. Дана строка ' php '. Сделайте из нее 3 разных строки с помощью функций класса trim: 'php', ' php', 'php '.
*/
echo '<br><br> ----- 20. Дана строка \' php \'. Сделайте из нее 3 разных строки с помощью функций класса trim: \'php\', \' php\', \'php \'. <br>';

$str = ' php ';

$str = str_replace(' ',$str,$str);
echo $str;

/////////////////Работа с strip_tags и htmlspecialchars
/*
21. Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки.
*/
echo '<br><br> ----- 21. Дана строка \'html, <b>php</b>, js\'. Удалите теги из этой строки. <br>';

$str = 'html, <b>php</b>, js';
$str_new = strip_tags($str);
echo $str_new;

/*
22. Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный.
*/
echo '<br><br> ----- 22. Дана строка \'html, <b>php</b>, js\'. Выведите ее на экран \'как есть\' <br>';

$str = 'html, <b>php</b>, js';
echo htmlentities($str);


////////////////Работа с chr и ord
/*
23. Узнайте код символов 'a', 'b', 'c', пробела.
*/
echo '<br><br> ----- 23. Узнайте код символов \'a\', \'b\', \'c\', пробела. <br>';

echo 'a - ', ord('a'),'<br>';
echo 'b - ', ord('b'),'<br>';
echo 'c  -  ', ord('c'),'<br>';
echo 'spase  - ', ord(' '),'<br>';

/*
24. Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита. Выведите на экран символ с кодом 33.
*/
echo '<br><br> ----- 24. Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита. Выведите на экран символ с кодом 33. <br>';
echo chr(33);


/*
25. Запишите в переменную $str случайный символ — большую букву латинского алфавита. Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита.
*/

echo '<br><br> ----- 25. Запишите в переменную $str случайный символ — большую букву латинского алфавита. <br>';

$i=rand(65,90);
echo chr($i);

/*
26. Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. Подсказка: воспользуйтесь циклом for или while.
*/
echo '<br><br> ----- 26. Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита.<br>';
$str='';
$len = 5;
while ($len>0){
    $str.=chr(rand(97,122));
    $len--;
}
echo $str;
/////////////////Работа с substr_count, str_word_count, str_split
/*
27. Дана строка 'Мама мыла раму'. Узнайте количество букв 'a' и 'м', входящих в эту строку.
*/
echo '<br><br> ----- 27. Дана строка \'Мама мыла раму\'. Узнайте количество букв \'a\' и \'м\', входящих в эту строку.<br>';

$str = 'Mama mila ramy';
echo 'string - ', $str, ' -  contains: <br>';
echo 'a - ', substr_count($str,'a'),'<br>';
echo 'i - ', substr_count($str,'i'),'<br>';
echo 'm - ', substr_count($str,'m'),'<br>';
/*
28. Скопируйте весь текст со страницы php.su, запишите его в переменную $str. Подсчитайте количество символов и количество слов в даннной строке.
*/
echo '<br><br> ----- 28. Подсчитайте количество символов и количество слов в даннной строке.<br>';

$str = 'This will handle a string where it is unknown if comma or period are used as thousand or decimal separator. Only exception where this leads to a conflict is when there is only a single comma or period and 3 possible decimals (123.456 or 123,456). An optional parameter is passed to handle this case (assume thousands, assume decimal, decimal when period, decimal when comma). It assumes an input string in any of the formats listed below.';

echo  'words - ',str_word_count($str),'<br>';
print_r(count_chars($str,0));


/*
29. Создайте массив гласных букв. С помощью этого массива подсчитайте количество гласных в строке $str. Результат представьте в виде ассоциативного массива, где ключами будут буквы, а элементами их количество.
*/
echo '<br><br> ----- 29. Создайте массив гласных букв. С помощью этого массива подсчитайте количество гласных в строке $str.<br>';
$arr_vowels = ['a', 'e', 'i', 'o', 'u'];

foreach ($arr_vowels as $value){
    $arr_symbol[$value]= substr_count($str,$value);
}
    print_r($arr_symbol);
/*
30. Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.
*/
echo '<br><br> ----- 30. Дана строка \'1234567890\'. Разбейте ее на массив с элементами \'12\', \'34\', \'56\', \'78\', \'90\'.<br>';
$str = '1234567890';
$arr_str = str_split($str,2);

print_r($arr_str);

////////////////////Работа с str_repeat, strrev
/*
31. Проверьте, является ли пара слов палиндромом (одинаково читается во всех направлениях, кот-ток, нос-сон).
*/
echo '<br><br> ----- 31. Проверьте, является ли пара слов палиндромом (одинаково читается во всех направлениях, кот-ток, нос-сон).<br>';



/*
32. Дан массив $arr. Найдите в нем все пары слов-палиндромов (одинаково читаются во всех направлениях, кот-ток, нос-сон). Результат выводите в виде строка формата 'нос — сон'. Проверьте работу скрипта на массиве $arr из примера. Совет: нужно сделать не один, а два цикла.
$arr = array('slon', 'nos', 'tok', 'tak', 'kot', 'pir', 'mir','son', 'rim');
*/

/*
33. Определите является ли фраза палиндромом. Примеры: 'A roza upala na lapu Asora'. Обратите внимание на то, что при обратном чтении игнорируются пробелы, запятые, дефисы, тире и большие буквы (подсказка: значит сначала нужно привести строку к стандартному виду — удалить лишние символы, привести все к нижнему регистру).
*/


/*
34. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.
x
xx
xxx
xxxx
xxxxx
*/


/*
35. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.

1
22
333
4444
55555
 */