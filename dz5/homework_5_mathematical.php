<?php
/*
 * Работа с %
*/
/*
1. Даны переменные $a = 10 и $b = 3. Найдите остаток от деления $a на $b.
*/
echo '<br><br> ----- 1. Даны переменные $a = 10 и $b = 3. Найдите остаток от деления $a на $b. <br>';
$a = 10;
$b=3;
$c= $a%$b;
echo $c;


/*
2. Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b.
Если это так — выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления.
*/
echo '<br><br> ----- 2. Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b. <br>';

if(($a%$b)>0){
    echo 'Делится с остатком';
}
else{
    echo 'Делится';
}

//////Работа с модулем
/*
3. Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.
*/
echo '<br><br> ----- 3. Даны переменные a и b. Найдите  модуль разности a и b. Проверьте работу скрипта самостоятельно для различных a и b. <br>';
$a = -10;
$b=-3;
$c= abs($a)-abs($b);
echo $c;

/*
4. Даны переменные $a и $b. Отнимите от $a переменную $b и результат присвойте переменной $c.
Сделайте так, чтобы в любом случае в переменную $c записалось положительное значение.
Проверьте работу скрипта при $a и $b, равных соответственно 3 и 5, 6 и 1.
*/
echo '<br><br> ----- 4. Даны переменные a и b. Отнимите от a переменную$b и результат присвойте переменной c.  <br>';
$a = 1;
$b=6;
$c = $a-$b;

echo abs($c);

////////Работа со степенью и корнем
/*
5. Возведите 2 в 10 степень. Результат запишите в переменную $st.
*/
echo '<br><br> ----- 5. Возведите 2 в 10 степень. Результат запишите в переменную $st.  <br>';


/*
6. Найдите квадратный корень из 245.
*/


/*
7. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите квадратный корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach.
*/


///////Работа с функциями округления
/*
8. Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.
*/

/*
9. Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону, запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.
*/


/////Работа с min и max
/*
10. Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.
*/


/////Работа с рандомом
/*
11. Выведите на экран случайное число от 1 до 100.
*/

/*
12. Сделайте так, чтобы каждый раз при обновлении страницы на экран выводилась случайным образом одна из трех картинок.
*/


/*
13. Заполните массив 10-ю случайными числами. (Подсказка: нужно воспользоваться циклами for или while).
*/


////////Общие задачи
/*
14. Напишите скрипт, который будет находить корни квадратного уравнения.
*/

/*
15. Напишите скрипт, который   будет находить факториал числа. Факториал — это произведение всех целых чисел, меньше данного. Например, 4! = 1*2*3*4 = 24.
*/

/*
16. Напишите скрипт, который проверяет, является ли данное число простым (простое число — это то, которое делится только на 1 и на само себя).
*/


/*
17. Дан массив $arr. Найдите среднее арифметическое его элементов. Подсказка: количество элементов массива можно подсчитать функцией count. Проверьте задачу на массиве с элементами 12, 15, 20, 25, 59, 79.
*/


/*
18. Напишите скрипт-калькулятор единого налога. Налог считается так: если вы заработали менее, чем ставка $stavka этого налога, умноженная на 30 — то платите ставку. Если же вы заработали более, чем 30*$stavka, то платите не только ставку налога, но и 5% от той суммы, на которую вы превысили 30*$stavka.
*/


/*
19. Напишите скрипт-калькулятор оплаты за электроэнергию. Сумма считается так: если вы потратили за месяц менее 150 киловатт, то сумма считается по одной ставке $summ1 за 1 киловатт, всё, что больше 150 и меньше 300 киловатт считается по ставке $summ2, а все киловатты после 300 — по ставке $summ3.
*/


/*
20. Напишите скрипт, который найдет все простые числа в заданном промежутке. Проверьте его работу на промежутке от 1 до 1000.
*/



/*
21. Напишите скрипт, который будет находить тройки целых чисел, удовлетворяющих теореме Пифагора.
*/

?>