<?php
/*
 * Работа с %
*/
/*
1. Даны переменные $a = 10 и $b = 3. Найдите остаток от деления $a на $b.
*/
echo '<br><br> ----- 1. Даны переменные $a = 10 и $b = 3. Найдите остаток от деления $a на $b. <br>';
$a = 10;
$b = 3;
$c = $a % $b;
echo $c;


/*
2. Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b.
Если это так — выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления.
*/
echo '<br><br> ----- 2. Даны переменные $a и $b. Проверьте, что $a делится без остатка на $b. <br>';

if (($a % $b) > 0) {
    echo 'Делится с остатком';
} else {
    echo 'Делится';
}

//////Работа с модулем
/*
3. Даны переменные $a и $b. Найдите найдите модуль разности $a и $b. Проверьте работу скрипта самостоятельно для различных $a и $b.
*/
echo '<br><br> ----- 3. Даны переменные a и b. Найдите  модуль разности a и b. Проверьте работу скрипта самостоятельно для различных a и b. <br>';
$a = -10;
$b = -3;
$c = abs($a) - abs($b);
echo $c;

/*
4. Даны переменные $a и $b. Отнимите от $a переменную $b и результат присвойте переменной $c.
Сделайте так, чтобы в любом случае в переменную $c записалось положительное значение.
Проверьте работу скрипта при $a и $b, равных соответственно 3 и 5, 6 и 1.
*/
echo '<br><br> ----- 4. Даны переменные a и b. Отнимите от a переменную$b и результат присвойте переменной c.  <br>';
$a = 1;
$b = 6;
$c = $a - $b;

echo abs($c);

////////Работа со степенью и корнем
/*
5. Возведите 2 в 10 степень. Результат запишите в переменную $st.
*/
echo '<br><br> ----- 5. Возведите 2 в 10 степень. Результат запишите в переменную $st.  <br>';

$x = 2;
$st = $x ** 10;

echo $st;

/*
6. Найдите квадратный корень из 245.
*/
echo '<br><br> ----- 6. Найдите квадратный корень из 245.  <br>';
$x = 245;

echo sqrt($x);

/*
7. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите квадратный корень из суммы квадратов его элементов. Для решения воспользуйтесь циклом foreach.
*/
echo '<br><br> ----- 7. Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите квадратный корень из суммы квадратов его элементов. <br>';
$squar = null;
$arr = [4, 2, 5, 19, 13, 0, 10];
foreach ($arr as $value) {
    if ($value <> 0) {
        $value *= $value;
        $squar += $value;
    }
}
echo sqrt($squar);

///////Работа с функциями округления
/*
8. Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.
*/
echo '<br><br> ----- 8. Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых. <br>';
$x = 379;
echo 'округлние до целых - ', round(sqrt($x), 0), '<br>';
echo 'округлние до десятых - ', round(sqrt($x), 1), '<br>';
echo 'округлние до сотых - ', round(sqrt($x), 2), '<br>';

/*
9. Найдите квадратный корень из 587. Округлите результат в большую и меньшую сторону,
запишите результаты округления в ассоциативный массив с ключами 'floor' и 'ceil'.
*/
echo '<br><br> ----- 8. Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых. <br>';
$arr = [];
$x = 587;
echo sqrt($x), '<br>';
$arr['floor'] = floor(sqrt($x));
$arr['ceil'] = ceil(sqrt($x));

print_r($arr);

/////Работа с min и max
/*
10. Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число.
*/
echo '<br><br> ----- 10. Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число. <br>';
$arr = [4, -2, 5, 19, -130, 0, 10];

echo 'min ', min($arr), '<br>';
echo 'max ', max($arr), '<br>';

/////Работа с рандомом
/*
11. Выведите на экран случайное число от 1 до 100.
*/
echo '<br><br> ----- 11. Выведите на экран случайное число от 1 до 100. <br>';

echo rand(1, 100);


/*
12. Сделайте так, чтобы каждый раз при обновлении страницы на экран выводилась случайным образом одна из трех картинок.
*/
echo '<br><br> ----- 12. Сделайте так, чтобы каждый раз при обновлении страницы на экран выводилась случайным образом одна из трех картинок.<br>';

$rand = rand(1, 3);
switch ($rand) {
    case 1:
        echo '<img src="smile.jpg">';
        break;
    case 2:
        echo '<img src="smile2.jpg">';
        break;
    case 3:
        echo '<img src="sorrow.jpg">';
        break;
}


/*
13. Заполните массив 10-ю случайными числами. (Подсказка: нужно воспользоваться циклами for или while).
*/
echo '<br><br> ----- 13. Заполните массив 10-ю случайными числами.  <br>';

for ($i = 0; $i <= 9; $i++) {
    $arr_rand[] = rand(1, 100);

}
print_r($arr_rand);

////////Общие задачи
/*
14. Напишите скрипт, который будет находить корни квадратного уравнения.
*/
echo '<br><br> ----- 14. Напишите скрипт, который будет находить корни квадратного уравнения.  <br>';

function square_root($a, $b, $c)
{
    if ($a == 0) {
        return 0;
    }
    $D = ($b * $b - 4 * $a * $c);
    if ($D <= 0) {
        return 'Дескриминант меньше нуля, уравнение не имеет решений.';
    }
    $x[] = ((-1 * $b + sqrt($D)) / (2 * $a));
    $x[] = ((-1 * $b - sqrt($D)) / (2 * $a));
    return $x;
}

$x = square_root(2, 5, 3);

echo "<pre>";
var_dump($x);
echo "</pre>";
/*
15. Напишите скрипт, который   будет находить факториал числа.
Факториал — это произведение всех целых чисел, меньше данного. Например, 4! = 1*2*3*4 = 24.
*/
echo '<br><br> ----- 15. Напишите скрипт, который   будет находить факториал числа.  <br>';

function factorial($f)
{
    if ($f <= 0) {
        return 1;
    }
    $f *= factorial($f - 1);
    return $f;
}

echo factorial(4);


/*
16. Напишите скрипт, который проверяет, является ли данное число простым
(простое число — это то, которое делится только на 1 и на само себя).
*/
echo '<br><br> ----- 16. Напишите скрипт, который проверяет, является ли данное число простым   <br>';

function prime_namber($p)
{
    if (empty($p)) {
        return 0;
    }
    if (is_float($p / 2)) {
        $res = 'The number ' . $p . ' is prime <br>';
    } else {
        $res = 'The number ' . $p . ' is a composite <br>';

    }
    return $res;
}

echo prime_namber(5);
echo prime_namber(6);
/*
17. Дан массив $arr. Найдите среднее арифметическое его элементов.
Подсказка: количество элементов массива можно подсчитать функцией count.
Проверьте задачу на массиве с элементами 12, 15, 20, 25, 59, 79.
*/
echo '<br><br> ----- 17. Дан массив $arr. Найдите среднее арифметическое его элементов.   <br>';
$arr = [12, 15, 20, 25, 59, 79];
$average = 0;
foreach ($arr as $value) {
    $average += $value;
}
$average = $average / count($arr);
echo $average;

/*
18. Напишите скрипт-калькулятор единого налога.
Налог считается так: если вы заработали менее, чем ставка $stavka этого налога, умноженная на 30 — то платите ставку.
Если же вы заработали более, чем 30*$stavka, то платите не только ставку налога, но и 5% от той суммы, на которую вы превысили 30*$stavka.
*/
echo '<br><br> ----- 18. Напишите скрипт-калькулятор единого налога.   <br>';

function single_tax($zp, $stavka)
{
    if (empty($zp) or empty($stavka)) {
        return 0;
    }
    if ($zp < (30 * $stavka)) {
        return 'Ваш налог ' . $stavka;
    } else {
        $stavka += ($zp - 30 * $stavka) * 0.05;
        return 'Ваш налог ' . $stavka;
    }
}

echo single_tax(1000, 30);
echo '<br>';
echo single_tax(20, 30);
/*
19. Напишите скрипт-калькулятор оплаты за электроэнергию.
Сумма считается так: если вы потратили за месяц менее 150 киловатт,
то сумма считается по одной ставке $summ1 за 1 киловатт, всё, что больше 150 и меньше 300 киловатт считается по ставке $summ2,
а все киловатты после 300 — по ставке $summ3.
*/
echo '<br><br> ----- 19. Напишите скрипт-калькулятор оплаты за электроэнергию.  <br>';

function electric($kw_m)
{
    if (empty($kw_m)) {
        return 0;
    }
    $sum1 = 1;
    $sum2 = 2;
    $sum3 = 3;
    if ($kw_m <= 149) {
        $sum_full = $kw_m * $sum1;
        return $sum_full;
    } else if ($kw_m <= 299) {
        $sum_full = 149 * $sum1 + ($kw_m - 149) * $sum2;
        return $sum_full;
    } else {
        $sum_full = 149 * $sum1 + 150 * $sum2 + ($kw_m - 299) * $sum3;
        return $sum_full;
    }
}

echo electric(149);
echo '<br>';
echo electric(299);
echo '<br>';
echo electric(500);

/*
20. Напишите скрипт, который найдет все простые числа в заданном промежутке. Проверьте его работу на промежутке от 1 до 1000.
*/
echo '<br><br> ----- 20. Напишите скрипт, который найдет все простые числа в заданном промежутке.  <br>';

function primes($start, $end)
{
    if (empty($start) or empty($end)) {
        return 0;
    }
    $primes = array();
    while ($start <= $end) {
        if (is_float($start / 2)) {
            $primes[] = $start;
        }
        $start++;
    }
    return $primes;
}

$primes = primes(1, 1000);

print_r($primes);
/*
21. Напишите скрипт, который будет находить тройки целых чисел, удовлетворяющих теореме Пифагора.
*/
echo '<br><br> ----- 21. Напишите скрипт, который будет находить тройки целых чисел, удовлетворяющих теореме Пифагора.  <br>';

function pifagor_rand($rand)
{
    if ($rand <= 1) {
        return 0;
    }
    $pif_side = array();
    $m = rand(2, $rand);
    $pif_side['katet1'] = ($m * 2) ** 2;
    $pif_side['katet2'] = ($m ** 2 - 1) ** 2;
    $pif_side['gipotenuza'] = ($m ** 2 + 1) ** 2;
    return $pif_side;

}

$side = pifagor_rand(2);

echo "<pre>";
var_dump($side);
echo "</pre>";

?>