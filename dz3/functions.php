<?php
/*

4. Вариант хороший. Но можно проще ///// значительно, упустил count как таковой... (

$count = count($arr);// подсчитать количество элементов в массиве
$result = array();
// начинаем отсчет от последнего элемента и движемся к первому
for ($i = ($count - 1); $i >= 0; $i--) {
    $result[$i] = $arr[$i];
}
//------------------------------

5. Эти функции пока использовать нельзя. Но если хотите, есть фукнция is_numeric - она проверяет является ли значение переменной каким-либо числом.
Без этих функций можно обойтись целочисленным делением.

7. Не совсем верно. Нужно было задействовать переменную, которая конкатенирует нужные символы в строку, после цикла приклеивает троеточие, результат выводит на экран.

8. Не правильно.   // пошел по пути наименьго сотративления, указав параметры....
идея 10 задачи была - вернуть число со знаками длинной $length
[11:04:00 PM] Denis: передал 1 - вернуло число от 1 до 9
[11:04:10 PM] Denis: передал 2 - вернуло число от 10 до 99

9. Переделайте пожалуйста

12. rand($length, 99) - а если $length будет больше 99ти?
Лучше тогда делать от 1 до $length.

13. Переделайте пожалуйста

14. Не правильно. http://joxi.ru/EA4zEE3Fwwvdam
*/




/*
1.	Сделайте функцию, которая возвращает куб числа. Число передается параметром.
*/
echo "<br>  -- 1 --  Сделайте функцию, которая возвращает куб числа. Число передается параметром.  <br>";
function fun_cube($cube){
	echo $cube**3;
}

fun_cube(3);


/*
2.	Сделайте функцию, которая возвращает сумму двух чисел. Числа передаются ей первым и вторым параметром.
*/
echo "<br>  -- 2.	Сделайте функцию, которая возвращает сумму двух чисел. Числа передаются ей первым и вторым параметром.  <br>";
function sum($e1,$e2){
	echo $e1+$e2;
}

sum(1,2);

/*
3.	Сделайте функцию, которая отнимает от первого числа второе и делит на третье.
*/
echo "<br>  -- 3.	Сделайте функцию, которая отнимает от первого числа второе и делит на третье.  <br>";

function culc($e,$minus,$div){
		echo($e-$minus)/$div;
		$calc_return = ($e-$minus)/$div;
		return $calc_return; 
		//echo " ",$calc_return;
}

culc(131314,1,1);


/*
4.	Сделайте функцию, которая на вход принимает параметр в виде массива, разворачивает массив и возвращает результат.
*/
echo "<br>  -- 4.	Сделайте функцию, которая на вход принимает параметр в виде массива, разворачивает массив и возвращает результат.  <br>";

$arr = array(1,2,3,4);

function print_mas($mas){
	$key1=0;
	$key2=null;
	$arr_revers=array();
	end($mas);
	$key2=key($mas);
	while ($key2>=0) {
		$arr_revers[$key1]=$mas[$key2];
		$key2--;
		$key1++;
	}
	print_r($arr_revers);
	return $arr_revers;

	//foreach ($mas as $key => $value) {
	//	echo $key," => ",$mas[$key],"<br>";
	//}
}

$value_return=print_mas($arr);

/*
5.	Сделайте функцию, которая принимает параметром число и проверяет четное оно или нет.
*/
echo "<br>  -- 5.	Сделайте функцию, которая принимает параметром число и проверяет четное оно или нет.  <br>";

function chet($i){
	if(is_integer($i)or is_float($i)){
		if(is_float($i/2)){
		echo "Число - ", $i," не четное <br>";
		}
		else{
		echo "Число - ", $i," четное <br>";
		}
	}
	else{
		echo "Функция обрабатывает только числа <br>";
	}
}

chet(1);
chet(2);
chet(-2);
chet("три");


/*
6.	Сделайте функцию, которая принимает параметром массив, а возвращает массив из четных элементов этого массива.
*/
echo "<br>  -- 6.	Сделайте функцию, которая принимает параметром массив, а возвращает массив из четных элементов этого массива.  <br>";

$arr = array(1,2,"три",4,8,5,3,6);
$arr2 = array(1,3,7);
function mas_chet($mas){
	if(is_array($mas)){
		foreach ($mas as $key => $value) {
			if (is_integer($mas[$key])){
				if (!is_float($value/2)){
					echo $key," => ",$mas[$key],"<br>";
				}
			}
		}
	}
	else{
		echo "Функция обрабатывает только массивы <br>";
	}	
}
mas_chet($arr);
mas_chet(5);


/*
7.	Сделайте функцию, которая принимает параметром строку, а возвращает первые N символов этой строки (N – это второй параметр). Функция должна добавлять троеточие в конце возвращаемой строки.
*/

//7. Не совсем верно. Нужно было задействовать переменную, которая конкатенирует нужные символы в строку, после цикла приклеивает троеточие, результат выводит на ///экран.
/// Не добавил троеточие - да, но в задании ничего не сказано, что значение необходимо внести в переменную. Переделал. Может итоговые данные всегда необходимо помещать в переменную?
echo "<br>  -- 7.	Сделайте функцию, которая принимает параметром строку, а возвращает первые N символов этой строки (N – это второй параметр). Функция должна добавлять троеточие в конце возвращаемой строки.  <br>";

$str = 'Programming';

function line($str,$n){
	$i=0;
	$st='';
	while ($i<$n){
		 $st.=$str{$i};
		$i++; 
	}
	$st.="...";
	echo "<br>",$st;
}

line($str,5);


/*
8.	Напишите функцию, которая в качестве параметра принимает массив, меняет у него ключи со значениями. Например $arr = array(‘php’ => ‘PHP’, ‘java’ => ‘Java’); А результатом будет array(‘PHP’ => ‘php’, ‘Java’ => ‘java’).
*/



echo "<br>  -- 8.	Напишите функцию, которая в качестве параметра принимает массив, меняет у него ключи со значениями. Например arr = array('php' => 'PHP', 'java' => 'Java'); А результатом будет array(‘PHP’ => 'php', 'Java' => 'java').  <br> ";

$arr = array('php' => 'PHP', 'java' => 'Java');
echo "<br> Исходный массив: <br>";
foreach ($arr as $key => $value) {
	 echo $key, "=>", $value, "<br>";
}

function mas_key($mas){
		$m_c = array();
	foreach ($mas as $key => $value){
		$m_c[$value] = $key;
			
	}
	echo "<br> Результат: <br>";
	print_r($m_c);
}

mas_key($arr);

/*
9.	Напишите функцию, которая будет считать сумму цифр числа переданного пользователем в функцию. Например: есть число 123, то программа должна вычислить сумму цифр 1, 2, 3, т. е. 6. Также функция должна сделать проверку на корректность введения данных пользователем (т.е. число больше нуля. не пустая строка, не равно null).
*/
echo "<br> <br>  -- 9.	Напишите функцию, которая будет считать сумму цифр числа переданного пользователем в функцию.   <br> ";



function sum_namber($namber){
	$i=0;
	$res=0;
	if (!empty($namber) and $namber>0 and is_integer($namber)){

		settype($namber, "string");
		$len=strlen($namber);
		while ($i< $len) {
			$res = $res + $namber{$i};
			$i++;
		}
		echo "<br>В функцию передали число: ", $namber, "<br>";
		echo "Результат сложения цифр числа: ", $res, "<br>";
	}
	else{
		echo "Вы ввели недопустимое значение! <br>";
	}
}

sum_namber(123);
sum_namber(0);
sum_namber(1234);
sum_namber('string');
sum_namber(12345);
sum_namber('');


/*
10.	Напишите функцию, которая возвращает число длиной $length ($length - это параметр функции, который отвечает за длину числа).
*/

//идея 10 задачи была - вернуть число со знаками длинной $length
//[11:04:00 PM] Denis: передал 1 - вернуло число от 1 до 9
//[11:04:10 PM] Denis: передал 2 - вернуло число от 10 до 99

echo "<br> <br>  -- 10. Напишите функцию, которая возвращает число длиной length (length - это параметр функции, который отвечает за длину числа).   <br> ";

function str_l($length){
	if (is_string($length) and !empty($length)){
		$long_str=null;
		$long_str = strlen($length);
		echo "Строка: ",$length," имеет длинну - ", $long_str, " символов. <br>";
	}
	else{
		echo "Функция обрабатывает только строчные значения!<br>";
	}
}

str_l('Два слова');
str_l(34);
str_l('Более длинное предложение');

echo "<br> Исправленное решение <br>";

function lenght_($length){
	//settype($length, "string");
	//$len=strlen($length);
	$rand_min=1;
	$rand_max=10;
	if($length==1){
		$lenght_rand=rand($rand_min,$rand_max-1);
	}
	else{
		while($length-1>0){
			$rand_min*=10;
			$rand_max*=10;
			$length--;
		}
	}
	echo $rand_min," ";
	echo($rand_max)-1;
	$rand_max--;
	$lenght_rand=rand($rand_min,$rand_max);
	echo " <br> Результат: ",$lenght_rand;
	return $lenght_rand;
}
	

lenght_(12);








//$var='';
//echo "<br>", $var;
//settype($var,"integer");
//echo "<br>", $var;
//settype($var,"integer");
//echo "<br>", $var;




/*
11.	На основании предыдущей задачи необходимо написать функцию, которая принимает два параметра: первый - это число, которое возвращает функция в задаче №3 ($x), второй параметр - это любое ваше число ($y). Функция должна подсчитать количество вхождений $y в числе $x. Например: цифра 5 в числе 442158755745 встречается 4 раза.
*/
echo "<br> <br>  -- 11.	На основании предыдущей задачи необходимо написать функцию, которая принимает два параметра: первый - это число, которое возвращает функция в задаче №3 (x), второй параметр - это любое ваше число (y). Функция должна подсчитать количество вхождений (y) в числе (x). Например: цифра 5 в числе 442158755745 встречается 4 раза.   <br> ";

if (function_exists('lenght_')){
	function number_dig_v2($x,$y){
		//$x=null;
		if (is_integer($y)){
			$sum_y=0;
			echo "Результат функции lenght_: ";
			echo($x);
			settype($x, "string"); // если убираю функция не работает...
			//settype($y, "string");
			echo " Цифра: ", $y, " встречается ";
			$i=0;
			$len=strlen($x);
			while ($i < $len){
				if($x{$i}==$y){
					$sum_y++;
				}
				$i++;
			}
			echo " ",$sum_y, " раз. <br>";
		}
		else{
			echo "Второй параметр не является цифрой или пустой!<br>";
		}
	}
}
$value=lenght_(9);
number_dig_v2($value, 3);





/*
12.	Написать функцию, которая возвращает массив длиной $length, заполненный случайными числами (можно воспользоваться функцией rand).
*/
echo " <br> --- 12.	Написать функцию, которая возвращает массив длиной length, заполненный случайными числами (можно воспользоваться функцией rand).
*/ <br>";

function random_arr($length,$from,$to){
	$arr = array();
	$i=0;
	while($i< $length){
		$arr[$i]=rand($from,$to);
		echo $arr[$i];
		$i++;
	}

	echo "<br>";
	print_r($arr);
	return $arr;
}

random_arr(10,1,500);

/*
13.	Написать функцию, которая в качестве параметра принимает массив из задачи №4. Функция находит максимальное и минимальное значение массива и меняет их местами.
*/
echo " <br> --- 13.	Написать функцию, которая в качестве параметра принимает массив из задачи №4. Функция находит максимальное и минимальное значение массива и меняет их местами. <br>";

function revers_min_max($arr){
	$min=0;
	$max=0;
	end($arr);
	$i=key($arr);	
	$min=$max=$arr[$i];
	while ($i>=0){
		if($min>$arr{$i}){
			$min=$arr{$i};
			$key_min=$i;
		}
		if ($max<$arr{$i}){
			$max=$arr{$i};
			$key_max=$i;
		}
	$i--;
	}
	echo ' max: ',$key_max, '=> ',$max;
	echo ' min: ',$key_min, '=> ',$min;
	$arr[$key_min]=$max;
	$arr[$key_max]=$min;
	echo "<br> Результат функции: ";
	print_r($arr);
}

$value_return=random_arr(5,1,100);
revers_min_max($value_return);


/*
14.	Написать функцию, которая в качестве параметра принимает натуральное число n. Вычислить: 11 + 22 + .. + nn. Вывести на экран квадраты этих чисел, а также сумму квадратов этих чисел.
*/

echo " <br> --- 14.	Написать функцию, которая в качестве параметра принимает натуральное число n. Вычислить: 11 + 22 + .. + nn. Вывести на экран квадраты этих чисел, а также сумму квадратов этих чисел.";

function natural_namber($n){
	if ($n>0 and $n<=9 and is_integer($n)){
		$nn=null;
		$square=array();
		$sum=null;
		$key=$n-1;
		echo "<br> Ряд натуральных чисел: ";
		while($key>=0){//$n-$key-1>0 and 
			$nn=$n-$key;
			echo $nn, " ";
			$square[]=$nn**$nn;
			$sum=$sum+$square[$n-$key-1];
			$key--;
		}
		$key=$n-1;
		echo "<br> Квадраты ряда натуральных чисел: ";
		while($key>=0){
			echo $square[$n-$key-1], ", ";
			$key--;
		}
		echo "<br> Сумма квадратов ряда натуральных чисел = ", $sum;

	}
	else{
		echo "<br> Функция обрабатывает только числа от 1 до 9 <br>";
	}
}

natural_namber(3);

?>